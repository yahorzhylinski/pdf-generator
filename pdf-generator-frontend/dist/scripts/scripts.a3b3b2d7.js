"use strict";angular.module("PdfGeneratorApp",["ngAnimate","ngCookies","ngResource","ui.router","ngSanitize","ngTouch","ng-token-auth","ui-notification"]).config(["$stateProvider","$urlRouterProvider",function(a,b){b.otherwise("/reports/index"),a.state("reports",{url:"/reports","abstract":!0,template:"<ui-view/>",resolve:{auth:["$auth","Notification","$location",function(a,b,c){a.validateUser()["catch"](function(a){c.path("/auth/sign_in"),b.error(a.reason.capitalize())})}]}}).state("reports.index",{url:"/index",templateUrl:"views/reports/index.html",controller:"ReportsIndexCtrl"}).state("reports.new",{url:"/new",templateUrl:"views/reports/new.html",controller:"ReportsNewCtrl"}).state("reports.show",{url:"/:id",templateUrl:"views/reports/show.html",controller:"ReportsShowCtrl"}).state("auth",{url:"/auth","abstract":!0,template:"<ui-view/>",resolve:{auth:["$auth","Notification","$location",function(a,b,c){a.validateUser().then(function(){b.error("You have already signed in"),c.path("/reports/index")})}]}}).state("auth.sign_in",{url:"/sign_in",templateUrl:"views/auth/sign_in.html",controller:"SignInCtrl"}).state("auth.sign_up",{url:"/sign_up",templateUrl:"views/auth/sign_up.html",controller:"SignUpCtrl"}).state("otherwise",{url:"/reports/index"})}]).config(["$authProvider",function(a){a.configure({apiUrl:CONSTANTS.api_base_url,signOutUrl:"/api/auth/sign_out",tokenValidationPath:"/api/auth/validate_token",emailRegistrationPath:"/api/auth",accountUpdatePath:"/api/auth",accountDeletePath:"/api/auth",confirmationSuccessUrl:window.location.href,passwordResetPath:"/api/auth/password",passwordUpdatePath:"/api/auth/password",passwordResetSuccessUrl:window.location.href,emailSignInPath:"/api/auth/sign_in",storage:"cookies",forceValidateToken:!1,validateOnPageLoad:!0,proxyIf:function(){return!1},proxyUrl:"/proxy",omniauthWindowType:"sameWindow",authProviderPaths:{github:"/auth/github",facebook:"/auth/facebook",google:"/auth/google"},tokenFormat:{"access-token":"{{ token }}","token-type":"Bearer",client:"{{ clientId }}",expiry:"{{ expiry }}",uid:"{{ uid }}"},parseExpiry:function(a){return 1e3*parseInt(a.expiry)||null},handleLoginResponse:function(a){return a.data},handleAccountUpdateResponse:function(a){return a.data},handleTokenValidationResponse:function(a){return a.data}})}]),String.prototype.capitalize=function(){return this.charAt(0).toUpperCase()+this.slice(1)};var CONSTANTS={api_base_url:"http://localhost:3000"};angular.module("PdfGeneratorApp").controller("NavigationCtrl",["$rootScope","Notification","$scope","$location",function(a,b,c,d){a.$on("auth:login-success",function(a,c){b("Welcome, "+c.username+"!")}),a.$on("auth:logout-success",function(a,c){d.path("/auth/sign_in"),b("Goodbuy!")})}]),angular.module("PdfGeneratorApp").controller("SignInCtrl",["$scope","$auth","Notification","$location",function(a,b,c,d){a.login=function(a){b.submitLogin(a).then(function(a){d.path("/reports/index")})["catch"](function(a){c.error(a.errors.join("<br />"))})}}]),angular.module("PdfGeneratorApp").controller("SignUpCtrl",["$scope","$auth","Notification","$location",function(a,b,c,d){a.signUp=function(a){b.submitRegistration(a).then(function(){c.success("Thanks for registration."),d.path("#/auth/sign_in")})["catch"](function(a){c.error(a.data.errors.full_messages.join("<br />"))})}}]),angular.module("PdfGeneratorApp").controller("ReportsIndexCtrl",["$scope","Report","Notification",function(a,b,c){b.index(function(b){a.reports=b.data},function(a){c.error(a.statusText)})}]),angular.module("PdfGeneratorApp").controller("ReportsNewCtrl",["$scope","Report","Notification",function(a,b,c){a.createReport=function(a){b.save(a,function(a){c.success("The Report was created")},function(a){c.error(a.data.data.errors.join("<br />"))})}}]),angular.module("PdfGeneratorApp").controller("ReportsShowCtrl",["$scope","Report","Notification","$stateParams","$window","$http",function(a,b,c,d,e,f){b.show({id:d.id},function(b){a.report=b.data},function(a){c.error(a.data.errors.join("<br />"))}),a.updateReport=function(d){b.update({id:a.report.id,report:d.report},function(a){c.success("The Report was updated.")},function(a){console.log(a),c.error(a.data.data.errors.join("<br />"))})},a.openReport=function(d){var f="pdf"==d?b.getReportFilePdf:b.getReportFileJSON;f({id:a.report.id,type:d},function(a,b){if("pdf"==d){var c=URL.createObjectURL(a.response);e.open(c)}else alert(a)},function(a){c.error(a.statusText)})}}]),angular.module("PdfGeneratorApp").factory("Report",["$resource",function(a){return a(CONSTANTS.api_base_url+"/api/reports/:id",{id:"@id"},{create:{method:"POST"},index:{method:"GET",isArray:!1},show:{method:"GET",isArray:!1},update:{method:"PUT"},getReportFilePdf:{method:"GET",url:CONSTANTS.api_base_url+"/api/reports/get_report_file/:id/.pdf",headers:{accept:"application/pdf"},responseType:"arraybuffer",cache:!0,transformResponse:function(a){var b;return a&&(b=new Blob([a],{type:"application/pdf"})),{response:b}}},getReportFileJSON:{method:"GET",url:CONSTANTS.api_base_url+"/api/reports/get_report_file/:id/.json",isArray:!0,headers:{accept:"application/json"},cache:!0}})}]),angular.module("PdfGeneratorApp").run(["$templateCache",function(a){a.put("views/auth/sign_in.html",'<div class="col-xs-12 col-md-8 col-md-offset-2"> <h2>Login</h2> <form ng-submit="login(loginForm)" role="form" ng-init="loginForm = {}"> <div class="form-group"> <input type="text" name="login" ng-model="loginForm.sign_in.login" placeholder="Email or Username" required class="form-control"> </div> <div class="form-group"> <input type="password" name="password" ng-model="loginForm.sign_in.password" placeholder="Password" required class="form-control"> </div> <button type="submit" class="btn btn-primary btn-lg">Sign in</button> </form> </div>'),a.put("views/auth/sign_up.html",'<div class="col-xs-12 col-md-8 col-md-offset-2"> <h2>Sign Up</h2> <form ng-submit="signUp(registrationForm)" role="form" ng-init="registrationForm = {}"> <div class="form-group"> <input type="username" name="text" ng-model="registrationForm.sign_up.username" placeholder="Username" required class="form-control"> </div> <div class="form-group"> <input type="email" name="email" ng-model="registrationForm.sign_up.email" placeholder="Email" required class="form-control"> </div> <div class="form-group"> <input type="password" name="password" ng-model="registrationForm.sign_up.password" placeholder="Password" required class="form-control"> </div> <button type="submit" class="btn btn-primary btn-lg">Register</button> </form> </div>'),a.put("views/reports/index.html",'<div class="row"> <div class="col-xs-12"> <div class="col-xs-12"> <a class="btn btn-success pull-right" href="#/reports/new">Create new report</a> </div> <h2 class="text-center">Reports</h2> <table class="table"> <thead> <tr> <td>Campaign ID</td> <td>Created at</td> <td>Status</td> <td>Edit</td> </tr> </thead> <tr ng-repeat="report in reports"> <td>{{report.campaign_id}}</td> <td>{{report.created_at | date : \'yyyy-MM-dd HH:mm:ss\'}}</td> <td>{{report.status}}</td> <td><a href="#/reports/{{report.id}}">Edit</a></td> </tr> </table> </div> </div>'),a.put("views/reports/new.html",'<div class="col-xs-12 col-md-8 col-md-offset-2"> <h2>New Report</h2> <form ng-submit="createReport(reportForm)" role="form" ng-init="reportForm = {}"> <div class="form-group"> <input type="text" name="campaign_id" ng-model="reportForm.report.campaign_id" placeholder="Campaign ID" required class="form-control"> </div> <div class="form-group"> <textarea name="comment" ng-model="reportForm.report.comment" placeholder="Comment" class="form-control"></textarea> </div> <button type="submit" class="btn btn-primary btn-lg">Create</button> </form> </div>'),a.put("views/reports/show.html",'<div class="col-xs-12 col-md-8 col-md-offset-2" ng-if="report"> <h2>Report #{{report.id}}</h2> <table class="table"> <tr> <td>Campaign ID</td> <td>{{report.campaign_id}}</td> </tr> <tr> <td>Created at</td> <td>{{report.created_at | date : \'yyyy-MM-dd HH:mm:ss\'}}</td> </tr> <tr> <td>status</td> <td>{{report.status}}</td> </tr> {{report.status == \'generated\'}} <tr ng-if="report.status == \'generated\'"> <td><a class="btn btn-default" ng-click="openReport(\'pdf\')">Open PDF</a></td> <td><a class="btn btn-default" ng-click="openReport(\'json\')">Open JSON</a></td> </tr> </table> <form ng-submit="updateReport(reportForm)" role="form" ng-init="reportForm = { report: { comment: report.comment } }"> <div class="form-group"> <textarea name="comment" ng-model="reportForm.report.comment" placeholder="Comment" class="form-control">\n      {{report.comment}}\n    </textarea> </div> <button type="submit" class="btn btn-primary btn-lg">Update</button> </form> </div>'),a.put("views/sign_in.html",'<div class="col-xs-12 col-md-8 col-md-offset-2"> <h2>Login</h2> <form ng-submit="login(loginForm)" role="form" ng-init="loginForm = {}"> <div class="form-group"> <input type="text" name="login" ng-model="loginForm.sign_in.login" placeholder="Email or Username" required class="form-control"> </div> <div class="form-group"> <input type="password" name="password" ng-model="loginForm.sign_in.password" placeholder="Password" required class="form-control"> </div> <button type="submit" class="btn btn-primary btn-lg">Sign in</button> </form> </div>'),a.put("views/sign_up.html",'<div class="col-xs-12 col-md-8 col-md-offset-2"> <h2>Sign Up</h2> <form ng-submit="signUp(registrationForm)" role="form" ng-init="registrationForm = {}"> <div class="form-group"> <input type="username" name="username" ng-model="registrationForm.sign_up.username" placeholder="Username" required class="form-control"> </div> <div class="form-group"> <input type="email" name="email" ng-model="registrationForm.sign_up.email" placeholder="Email" required class="form-control"> </div> <div class="form-group"> <input type="password" name="password" ng-model="registrationForm.sign_up.password" placeholder="Password" required class="form-control"> </div> <button type="submit" class="btn btn-primary btn-lg">Register</button> </form> </div>')}]);